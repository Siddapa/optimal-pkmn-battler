//! Code generated by `tools/generate` - manual edits will be overwritten.

const gen2 = @import("../../gen2/data.zig");
const rng = @import("../../common/rng.zig");
const std = @import("std");

const assert = std.debug.assert;
const percent = rng.Gen12.percent;
const Type = gen2.Type;

/// Representation of a Generation II Pokémon move.
pub const Move = enum(u8) {
    None,
    Pound,
    KarateChop,
    DoubleSlap,
    CometPunch,
    MegaPunch,
    PayDay,
    FirePunch,
    IcePunch,
    ThunderPunch,
    Scratch,
    ViseGrip,
    Guillotine,
    RazorWind,
    SwordsDance,
    Cut,
    Gust,
    WingAttack,
    Whirlwind,
    Fly,
    Bind,
    Slam,
    VineWhip,
    Stomp,
    DoubleKick,
    MegaKick,
    JumpKick,
    RollingKick,
    SandAttack,
    Headbutt,
    HornAttack,
    FuryAttack,
    HornDrill,
    Tackle,
    BodySlam,
    Wrap,
    TakeDown,
    Thrash,
    DoubleEdge,
    TailWhip,
    PoisonSting,
    Twineedle,
    PinMissile,
    Leer,
    Bite,
    Growl,
    Roar,
    Sing,
    Supersonic,
    SonicBoom,
    Disable,
    Acid,
    Ember,
    Flamethrower,
    Mist,
    WaterGun,
    HydroPump,
    Surf,
    IceBeam,
    Blizzard,
    Psybeam,
    BubbleBeam,
    AuroraBeam,
    HyperBeam,
    Peck,
    DrillPeck,
    Submission,
    LowKick,
    Counter,
    SeismicToss,
    Strength,
    Absorb,
    MegaDrain,
    LeechSeed,
    Growth,
    RazorLeaf,
    SolarBeam,
    PoisonPowder,
    StunSpore,
    SleepPowder,
    PetalDance,
    StringShot,
    DragonRage,
    FireSpin,
    ThunderShock,
    Thunderbolt,
    ThunderWave,
    Thunder,
    RockThrow,
    Earthquake,
    Fissure,
    Dig,
    Toxic,
    Confusion,
    Psychic,
    Hypnosis,
    Meditate,
    Agility,
    QuickAttack,
    Rage,
    Teleport,
    NightShade,
    Mimic,
    Screech,
    DoubleTeam,
    Recover,
    Harden,
    Minimize,
    Smokescreen,
    ConfuseRay,
    Withdraw,
    DefenseCurl,
    Barrier,
    LightScreen,
    Haze,
    Reflect,
    FocusEnergy,
    Bide,
    Metronome,
    MirrorMove,
    SelfDestruct,
    EggBomb,
    Lick,
    Smog,
    Sludge,
    BoneClub,
    FireBlast,
    Waterfall,
    Clamp,
    Swift,
    SkullBash,
    SpikeCannon,
    Constrict,
    Amnesia,
    Kinesis,
    SoftBoiled,
    HighJumpKick,
    Glare,
    DreamEater,
    PoisonGas,
    Barrage,
    LeechLife,
    LovelyKiss,
    SkyAttack,
    Transform,
    Bubble,
    DizzyPunch,
    Spore,
    Flash,
    Psywave,
    Splash,
    AcidArmor,
    Crabhammer,
    Explosion,
    FurySwipes,
    Bonemerang,
    Rest,
    RockSlide,
    HyperFang,
    Sharpen,
    Conversion,
    TriAttack,
    SuperFang,
    Slash,
    Substitute,
    Struggle,
    Sketch,
    TripleKick,
    Thief,
    SpiderWeb,
    MindReader,
    Nightmare,
    FlameWheel,
    Snore,
    Curse,
    Flail,
    Conversion2,
    Aeroblast,
    CottonSpore,
    Reversal,
    Spite,
    PowderSnow,
    Protect,
    MachPunch,
    ScaryFace,
    FeintAttack,
    SweetKiss,
    BellyDrum,
    SludgeBomb,
    MudSlap,
    Octazooka,
    Spikes,
    ZapCannon,
    Foresight,
    DestinyBond,
    PerishSong,
    IcyWind,
    Detect,
    BoneRush,
    LockOn,
    Outrage,
    Sandstorm,
    GigaDrain,
    Endure,
    Charm,
    Rollout,
    FalseSwipe,
    Swagger,
    MilkDrink,
    Spark,
    FuryCutter,
    SteelWing,
    MeanLook,
    Attract,
    SleepTalk,
    HealBell,
    Return,
    Present,
    Frustration,
    Safeguard,
    PainSplit,
    SacredFire,
    Magnitude,
    DynamicPunch,
    Megahorn,
    DragonBreath,
    BatonPass,
    Encore,
    Pursuit,
    RapidSpin,
    SweetScent,
    IronTail,
    MetalClaw,
    VitalThrow,
    MorningSun,
    Synthesis,
    Moonlight,
    HiddenPower,
    CrossChop,
    Twister,
    RainDance,
    SunnyDay,
    Crunch,
    MirrorCoat,
    PsychUp,
    ExtremeSpeed,
    AncientPower,
    ShadowBall,
    FutureSight,
    RockSmash,
    Whirlpool,
    BeatUp,

    /// Data associated with a Pokémon move.
    pub const Data = extern struct {
        /// The move's effect.
        effect: Effect,
        /// The move's base power.
        bp: u8,
        /// The move's type.
        type: Type,
        /// The move's accuracy percentage.
        accuracy: u8,
        /// The move's targeting behavior.
        target: Target,
        /// The chance of the move's secondary effect occurring.
        chance: u8 = 0,
        /// The priority of the move.
        priority: i8 = 0,
        /// Miscellaneous extra data/flags.
        extra: Extra = .{},

        /// Miscellaneous extra move related data/flags.
        const Extra = packed struct(u8) {
            /// Whether this move can be called via Metronome.
            metronome: bool = true,
            /// Whether this move can be called via Sleep Talk.
            sleep_talk: bool = true,
            /// Whether this move is considered to be "continuous".
            continuous: bool = false,
            /// Whether this move can hit a flying target.
            flying: bool = false,
            /// Whether this move can hit an underground target.
            underground: bool = false,
            /// Protocol reason offset associated with this move.
            protocol: u3 = 0,
        };

        comptime {
            assert(@sizeOf(Data) == 8);
        }
    };

    const DATA = [_]Data{
        // Pound
        .{
            .effect = .None,
            .bp = 40,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // KarateChop
        .{
            .effect = .HighCritical,
            .bp = 50,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Other,
        },
        // DoubleSlap
        .{
            .effect = .MultiHit,
            .bp = 15,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
        },
        // CometPunch
        .{
            .effect = .MultiHit,
            .bp = 18,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
        },
        // MegaPunch
        .{
            .effect = .None,
            .bp = 80,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
        },
        // PayDay
        .{
            .effect = .PayDay,
            .bp = 40,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // FirePunch
        .{
            .effect = .BurnChance,
            .bp = 75,
            .type = .Fire,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // IcePunch
        .{
            .effect = .FreezeChance,
            .bp = 75,
            .type = .Ice,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // ThunderPunch
        .{
            .effect = .ParalyzeChance,
            .bp = 75,
            .type = .Electric,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Scratch
        .{
            .effect = .None,
            .bp = 40,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // ViseGrip
        .{
            .effect = .None,
            .bp = 55,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Guillotine
        .{
            .effect = .OHKO,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(30),
            .target = .Other,
        },
        // RazorWind
        .{
            .effect = .RazorWind,
            .bp = 80,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Foes,
            .extra = .{ .sleep_talk = false, .continuous = true },
        },
        // SwordsDance
        .{
            .effect = .AttackUp2,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Cut
        .{
            .effect = .None,
            .bp = 50,
            .type = .Normal,
            .accuracy = percent(95),
            .target = .Other,
        },
        // Gust
        .{
            .effect = .Gust,
            .bp = 40,
            .type = .Flying,
            .accuracy = percent(100),
            .target = .Any,
            .extra = .{ .flying = true },
        },
        // WingAttack
        .{
            .effect = .None,
            .bp = 60,
            .type = .Flying,
            .accuracy = percent(100),
            .target = .Any,
        },
        // Whirlwind
        .{
            .effect = .ForceSwitch,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .priority = -1,
            .extra = .{ .flying = true },
        },
        // Fly
        .{
            .effect = .FlyDig,
            .bp = 70,
            .type = .Flying,
            .accuracy = percent(95),
            .target = .Any,
            .extra = .{ .sleep_talk = false, .continuous = true },
        },
        // Bind
        .{
            .effect = .Binding,
            .bp = 15,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Other,
            .extra = .{ .protocol = 1 },
        },
        // Slam
        .{
            .effect = .None,
            .bp = 80,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Other,
        },
        // VineWhip
        .{
            .effect = .None,
            .bp = 35,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Stomp
        .{
            .effect = .Stomp,
            .bp = 65,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // DoubleKick
        .{
            .effect = .DoubleHit,
            .bp = 30,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Other,
        },
        // MegaKick
        .{
            .effect = .None,
            .bp = 120,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Other,
        },
        // JumpKick
        .{
            .effect = .JumpKick,
            .bp = 70,
            .type = .Fighting,
            .accuracy = percent(95),
            .target = .Other,
        },
        // RollingKick
        .{
            .effect = .FlinchChance,
            .bp = 60,
            .type = .Fighting,
            .accuracy = percent(85),
            .target = .Other,
            .chance = percent(30),
        },
        // SandAttack
        .{
            .effect = .AccuracyDown1,
            .bp = 0,
            .type = .Ground,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Headbutt
        .{
            .effect = .FlinchChance,
            .bp = 70,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // HornAttack
        .{
            .effect = .None,
            .bp = 65,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // FuryAttack
        .{
            .effect = .MultiHit,
            .bp = 15,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
        },
        // HornDrill
        .{
            .effect = .OHKO,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(30),
            .target = .Other,
        },
        // Tackle
        .{
            .effect = .None,
            .bp = 35,
            .type = .Normal,
            .accuracy = percent(95),
            .target = .Other,
        },
        // BodySlam
        .{
            .effect = .ParalyzeChance,
            .bp = 85,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // Wrap
        .{
            .effect = .Binding,
            .bp = 15,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
            .extra = .{ .protocol = 2 },
        },
        // TakeDown
        .{
            .effect = .Recoil,
            .bp = 90,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
        },
        // Thrash
        .{
            .effect = .Thrashing,
            .bp = 90,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .RandomFoe,
            .extra = .{ .continuous = true },
        },
        // DoubleEdge
        .{
            .effect = .Recoil,
            .bp = 120,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // TailWhip
        .{
            .effect = .DefenseDown1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Foes,
        },
        // PoisonSting
        .{
            .effect = .PoisonChance,
            .bp = 15,
            .type = .Poison,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // Twineedle
        .{
            .effect = .Twineedle,
            .bp = 25,
            .type = .Bug,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(20),
        },
        // PinMissile
        .{
            .effect = .MultiHit,
            .bp = 14,
            .type = .Bug,
            .accuracy = percent(85),
            .target = .Other,
        },
        // Leer
        .{
            .effect = .DefenseDown1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Foes,
        },
        // Bite
        .{
            .effect = .FlinchChance,
            .bp = 60,
            .type = .Dark,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // Growl
        .{
            .effect = .AttackDown1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Foes,
        },
        // Roar
        .{
            .effect = .ForceSwitch,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .priority = -1,
        },
        // Sing
        .{
            .effect = .Sleep,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(55),
            .target = .Other,
        },
        // Supersonic
        .{
            .effect = .Confusion,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(55),
            .target = .Other,
        },
        // SonicBoom
        .{
            .effect = .FixedDamage,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Disable
        .{
            .effect = .Disable,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(55),
            .target = .Other,
        },
        // Acid
        .{
            .effect = .DefenseDownChance,
            .bp = 40,
            .type = .Poison,
            .accuracy = percent(100),
            .target = .Foes,
            .chance = percent(10),
        },
        // Ember
        .{
            .effect = .BurnChance,
            .bp = 40,
            .type = .Fire,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Flamethrower
        .{
            .effect = .BurnChance,
            .bp = 95,
            .type = .Fire,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Mist
        .{
            .effect = .Mist,
            .bp = 0,
            .type = .Ice,
            .accuracy = percent(100),
            .target = .Self,
        },
        // WaterGun
        .{
            .effect = .None,
            .bp = 40,
            .type = .Water,
            .accuracy = percent(100),
            .target = .Other,
        },
        // HydroPump
        .{
            .effect = .None,
            .bp = 120,
            .type = .Water,
            .accuracy = percent(80),
            .target = .Other,
        },
        // Surf
        .{
            .effect = .None,
            .bp = 95,
            .type = .Water,
            .accuracy = percent(100),
            .target = .Foes,
        },
        // IceBeam
        .{
            .effect = .FreezeChance,
            .bp = 95,
            .type = .Ice,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Blizzard
        .{
            .effect = .FreezeChance,
            .bp = 120,
            .type = .Ice,
            .accuracy = percent(70),
            .target = .Foes,
            .chance = percent(10),
        },
        // Psybeam
        .{
            .effect = .ConfusionChance,
            .bp = 65,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // BubbleBeam
        .{
            .effect = .SpeedDownChance,
            .bp = 65,
            .type = .Water,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // AuroraBeam
        .{
            .effect = .AttackDownChance,
            .bp = 65,
            .type = .Ice,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // HyperBeam
        .{
            .effect = .HyperBeam,
            .bp = 150,
            .type = .Normal,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Peck
        .{
            .effect = .None,
            .bp = 35,
            .type = .Flying,
            .accuracy = percent(100),
            .target = .Any,
        },
        // DrillPeck
        .{
            .effect = .None,
            .bp = 80,
            .type = .Flying,
            .accuracy = percent(100),
            .target = .Any,
        },
        // Submission
        .{
            .effect = .Recoil,
            .bp = 80,
            .type = .Fighting,
            .accuracy = percent(80),
            .target = .Other,
        },
        // LowKick
        .{
            .effect = .FlinchChance,
            .bp = 50,
            .type = .Fighting,
            .accuracy = percent(90),
            .target = .Other,
            .chance = percent(30),
        },
        // Counter
        .{
            .effect = .Counter,
            .bp = 0,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Depends,
            .priority = -1,
            .extra = .{ .metronome = false },
        },
        // SeismicToss
        .{
            .effect = .LevelDamage,
            .bp = 0,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Strength
        .{
            .effect = .None,
            .bp = 80,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Absorb
        .{
            .effect = .DrainHP,
            .bp = 20,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .Other,
        },
        // MegaDrain
        .{
            .effect = .DrainHP,
            .bp = 40,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .Other,
        },
        // LeechSeed
        .{
            .effect = .LeechSeed,
            .bp = 0,
            .type = .Grass,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Growth
        .{
            .effect = .SpAtkUp1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // RazorLeaf
        .{
            .effect = .HighCritical,
            .bp = 55,
            .type = .Grass,
            .accuracy = percent(95),
            .target = .Foes,
        },
        // SolarBeam
        .{
            .effect = .SolarBeam,
            .bp = 120,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .Other,
            .extra = .{ .sleep_talk = false, .continuous = true },
        },
        // PoisonPowder
        .{
            .effect = .Poison,
            .bp = 0,
            .type = .Poison,
            .accuracy = percent(75),
            .target = .Other,
        },
        // StunSpore
        .{
            .effect = .Paralyze,
            .bp = 0,
            .type = .Grass,
            .accuracy = percent(75),
            .target = .Other,
        },
        // SleepPowder
        .{
            .effect = .Sleep,
            .bp = 0,
            .type = .Grass,
            .accuracy = percent(75),
            .target = .Other,
        },
        // PetalDance
        .{
            .effect = .Thrashing,
            .bp = 70,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .RandomFoe,
            .extra = .{ .continuous = true },
        },
        // StringShot
        .{
            .effect = .SpeedDown1,
            .bp = 0,
            .type = .Bug,
            .accuracy = percent(95),
            .target = .Foes,
        },
        // DragonRage
        .{
            .effect = .FixedDamage,
            .bp = 0,
            .type = .Dragon,
            .accuracy = percent(100),
            .target = .Other,
        },
        // FireSpin
        .{
            .effect = .Binding,
            .bp = 15,
            .type = .Fire,
            .accuracy = percent(70),
            .target = .Other,
            .extra = .{ .protocol = 3 },
        },
        // ThunderShock
        .{
            .effect = .ParalyzeChance,
            .bp = 40,
            .type = .Electric,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Thunderbolt
        .{
            .effect = .ParalyzeChance,
            .bp = 95,
            .type = .Electric,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // ThunderWave
        .{
            .effect = .Paralyze,
            .bp = 0,
            .type = .Electric,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Thunder
        .{
            .effect = .Thunder,
            .bp = 120,
            .type = .Electric,
            .accuracy = percent(70),
            .target = .Other,
            .chance = percent(30),
            .extra = .{ .flying = true },
        },
        // RockThrow
        .{
            .effect = .None,
            .bp = 50,
            .type = .Rock,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Earthquake
        .{
            .effect = .Earthquake,
            .bp = 100,
            .type = .Ground,
            .accuracy = percent(100),
            .target = .AllOthers,
            .extra = .{ .underground = true },
        },
        // Fissure
        .{
            .effect = .OHKO,
            .bp = 0,
            .type = .Ground,
            .accuracy = percent(30),
            .target = .Other,
            .extra = .{ .underground = true },
        },
        // Dig
        .{
            .effect = .FlyDig,
            .bp = 60,
            .type = .Ground,
            .accuracy = percent(100),
            .target = .Other,
            .extra = .{ .sleep_talk = false },
        },
        // Toxic
        .{
            .effect = .Toxic,
            .bp = 0,
            .type = .Poison,
            .accuracy = percent(85),
            .target = .Other,
        },
        // Confusion
        .{
            .effect = .ConfusionChance,
            .bp = 50,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Psychic
        .{
            .effect = .SpDefDownChance,
            .bp = 90,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Hypnosis
        .{
            .effect = .Sleep,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(60),
            .target = .Other,
        },
        // Meditate
        .{
            .effect = .AttackUp1,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Agility
        .{
            .effect = .SpeedUp2,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Self,
        },
        // QuickAttack
        .{
            .effect = .Priority,
            .bp = 40,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .priority = 1,
        },
        // Rage
        .{
            .effect = .Rage,
            .bp = 20,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Teleport
        .{
            .effect = .Teleport,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Self,
        },
        // NightShade
        .{
            .effect = .LevelDamage,
            .bp = 0,
            .type = .Ghost,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Mimic
        .{
            .effect = .Mimic,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .extra = .{ .metronome = false },
        },
        // Screech
        .{
            .effect = .DefenseDown2,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
        },
        // DoubleTeam
        .{
            .effect = .EvasionUp1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Recover
        .{
            .effect = .Heal,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Harden
        .{
            .effect = .DefenseUp1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Minimize
        .{
            .effect = .EvasionUp1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Smokescreen
        .{
            .effect = .AccuracyDown1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // ConfuseRay
        .{
            .effect = .Confusion,
            .bp = 0,
            .type = .Ghost,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Withdraw
        .{
            .effect = .DefenseUp1,
            .bp = 0,
            .type = .Water,
            .accuracy = percent(100),
            .target = .Self,
        },
        // DefenseCurl
        .{
            .effect = .DefenseCurl,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Barrier
        .{
            .effect = .DefenseUp2,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Self,
        },
        // LightScreen
        .{
            .effect = .LightScreen,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .AllySide,
        },
        // Haze
        .{
            .effect = .Haze,
            .bp = 0,
            .type = .Ice,
            .accuracy = percent(100),
            .target = .All,
        },
        // Reflect
        .{
            .effect = .Reflect,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .AllySide,
        },
        // FocusEnergy
        .{
            .effect = .FocusEnergy,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Bide
        .{
            .effect = .Bide,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
            .extra = .{ .sleep_talk = false, .continuous = true },
        },
        // Metronome
        .{
            .effect = .Metronome,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
            .extra = .{ .metronome = false },
        },
        // MirrorMove
        .{
            .effect = .MirrorMove,
            .bp = 0,
            .type = .Flying,
            .accuracy = percent(100),
            .target = .Self,
        },
        // SelfDestruct
        .{
            .effect = .Explode,
            .bp = 200,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .AllOthers,
        },
        // EggBomb
        .{
            .effect = .None,
            .bp = 100,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Other,
        },
        // Lick
        .{
            .effect = .ParalyzeChance,
            .bp = 20,
            .type = .Ghost,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // Smog
        .{
            .effect = .PoisonChance,
            .bp = 20,
            .type = .Poison,
            .accuracy = percent(70),
            .target = .Other,
            .chance = percent(40),
        },
        // Sludge
        .{
            .effect = .PoisonChance,
            .bp = 65,
            .type = .Poison,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // BoneClub
        .{
            .effect = .FlinchChance,
            .bp = 65,
            .type = .Ground,
            .accuracy = percent(85),
            .target = .Other,
            .chance = percent(10),
        },
        // FireBlast
        .{
            .effect = .BurnChance,
            .bp = 120,
            .type = .Fire,
            .accuracy = percent(85),
            .target = .Other,
            .chance = percent(10),
        },
        // Waterfall
        .{
            .effect = .None,
            .bp = 80,
            .type = .Water,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Clamp
        .{
            .effect = .Binding,
            .bp = 35,
            .type = .Water,
            .accuracy = percent(75),
            .target = .Other,
            .extra = .{ .protocol = 4 },
        },
        // Swift
        .{
            .effect = .AlwaysHit,
            .bp = 60,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Foes,
        },
        // SkullBash
        .{
            .effect = .SkullBash,
            .bp = 100,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .extra = .{ .sleep_talk = false, .continuous = true },
        },
        // SpikeCannon
        .{
            .effect = .MultiHit,
            .bp = 20,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Constrict
        .{
            .effect = .SpeedDownChance,
            .bp = 10,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Amnesia
        .{
            .effect = .SpDefUp2,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Kinesis
        .{
            .effect = .AccuracyDown1,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(80),
            .target = .Other,
        },
        // SoftBoiled
        .{
            .effect = .Heal,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // HighJumpKick
        .{
            .effect = .JumpKick,
            .bp = 85,
            .type = .Fighting,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Glare
        .{
            .effect = .Paralyze,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Other,
        },
        // DreamEater
        .{
            .effect = .DreamEater,
            .bp = 100,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Other,
        },
        // PoisonGas
        .{
            .effect = .Poison,
            .bp = 0,
            .type = .Poison,
            .accuracy = percent(55),
            .target = .Other,
        },
        // Barrage
        .{
            .effect = .MultiHit,
            .bp = 15,
            .type = .Normal,
            .accuracy = percent(85),
            .target = .Other,
        },
        // LeechLife
        .{
            .effect = .DrainHP,
            .bp = 20,
            .type = .Bug,
            .accuracy = percent(100),
            .target = .Other,
        },
        // LovelyKiss
        .{
            .effect = .Sleep,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Other,
        },
        // SkyAttack
        .{
            .effect = .SkyAttack,
            .bp = 140,
            .type = .Flying,
            .accuracy = percent(90),
            .target = .Any,
            .extra = .{ .sleep_talk = false, .continuous = true },
        },
        // Transform
        .{
            .effect = .Transform,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Bubble
        .{
            .effect = .SpeedDownChance,
            .bp = 20,
            .type = .Water,
            .accuracy = percent(100),
            .target = .Foes,
            .chance = percent(10),
        },
        // DizzyPunch
        .{
            .effect = .ConfusionChance,
            .bp = 70,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(20),
        },
        // Spore
        .{
            .effect = .Sleep,
            .bp = 0,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Flash
        .{
            .effect = .AccuracyDown1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(70),
            .target = .Other,
        },
        // Psywave
        .{
            .effect = .Psywave,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(80),
            .target = .Other,
        },
        // Splash
        .{
            .effect = .Splash,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // AcidArmor
        .{
            .effect = .DefenseUp2,
            .bp = 0,
            .type = .Poison,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Crabhammer
        .{
            .effect = .HighCritical,
            .bp = 90,
            .type = .Water,
            .accuracy = percent(85),
            .target = .Other,
        },
        // Explosion
        .{
            .effect = .Explode,
            .bp = 250,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .AllOthers,
        },
        // FurySwipes
        .{
            .effect = .MultiHit,
            .bp = 18,
            .type = .Normal,
            .accuracy = percent(80),
            .target = .Other,
        },
        // Bonemerang
        .{
            .effect = .DoubleHit,
            .bp = 50,
            .type = .Ground,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Rest
        .{
            .effect = .Heal,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Self,
        },
        // RockSlide
        .{
            .effect = .FlinchChance,
            .bp = 75,
            .type = .Rock,
            .accuracy = percent(90),
            .target = .Foes,
            .chance = percent(30),
        },
        // HyperFang
        .{
            .effect = .FlinchChance,
            .bp = 80,
            .type = .Normal,
            .accuracy = percent(90),
            .target = .Other,
            .chance = percent(10),
        },
        // Sharpen
        .{
            .effect = .AttackUp1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Conversion
        .{
            .effect = .Conversion,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // TriAttack
        .{
            .effect = .TriAttack,
            .bp = 80,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(20),
        },
        // SuperFang
        .{
            .effect = .SuperFang,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Slash
        .{
            .effect = .HighCritical,
            .bp = 70,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Substitute
        .{
            .effect = .Substitute,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Struggle
        .{
            .effect = .Recoil,
            .bp = 50,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .RandomFoe,
            .extra = .{ .metronome = false },
        },
        // Sketch
        .{
            .effect = .Sketch,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .extra = .{ .metronome = false },
        },
        // TripleKick
        .{
            .effect = .TripleKick,
            .bp = 10,
            .type = .Fighting,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Thief
        .{
            .effect = .Thief,
            .bp = 40,
            .type = .Dark,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(100),
            .extra = .{ .metronome = false },
        },
        // SpiderWeb
        .{
            .effect = .MeanLook,
            .bp = 0,
            .type = .Bug,
            .accuracy = percent(100),
            .target = .Other,
        },
        // MindReader
        .{
            .effect = .LockOn,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Nightmare
        .{
            .effect = .Nightmare,
            .bp = 0,
            .type = .Ghost,
            .accuracy = percent(100),
            .target = .Other,
        },
        // FlameWheel
        .{
            .effect = .FlameWheel,
            .bp = 60,
            .type = .Fire,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // Snore
        .{
            .effect = .Snore,
            .bp = 40,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // Curse
        .{
            .effect = .Curse,
            .bp = 0,
            .type = .@"???",
            .accuracy = percent(100),
            .target = .Other,
        },
        // Flail
        .{
            .effect = .Reversal,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Conversion2
        .{
            .effect = .Conversion2,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Aeroblast
        .{
            .effect = .HighCritical,
            .bp = 100,
            .type = .Flying,
            .accuracy = percent(95),
            .target = .Any,
        },
        // CottonSpore
        .{
            .effect = .SpeedDown2,
            .bp = 0,
            .type = .Grass,
            .accuracy = percent(85),
            .target = .Other,
        },
        // Reversal
        .{
            .effect = .Reversal,
            .bp = 0,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Spite
        .{
            .effect = .Spite,
            .bp = 0,
            .type = .Ghost,
            .accuracy = percent(100),
            .target = .Other,
        },
        // PowderSnow
        .{
            .effect = .FreezeChance,
            .bp = 40,
            .type = .Ice,
            .accuracy = percent(100),
            .target = .Foes,
            .chance = percent(10),
        },
        // Protect
        .{
            .effect = .Protect,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
            .priority = 2,
            .extra = .{ .metronome = false },
        },
        // MachPunch
        .{
            .effect = .Priority,
            .bp = 40,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Other,
            .priority = 1,
        },
        // ScaryFace
        .{
            .effect = .SpeedDown2,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(90),
            .target = .Other,
        },
        // FeintAttack
        .{
            .effect = .AlwaysHit,
            .bp = 60,
            .type = .Dark,
            .accuracy = percent(100),
            .target = .Other,
        },
        // SweetKiss
        .{
            .effect = .Confusion,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(75),
            .target = .Other,
        },
        // BellyDrum
        .{
            .effect = .BellyDrum,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // SludgeBomb
        .{
            .effect = .PoisonChance,
            .bp = 90,
            .type = .Poison,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // MudSlap
        .{
            .effect = .AccuracyDownChance,
            .bp = 20,
            .type = .Ground,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(100),
        },
        // Octazooka
        .{
            .effect = .AccuracyDownChance,
            .bp = 65,
            .type = .Water,
            .accuracy = percent(85),
            .target = .Other,
            .chance = percent(50),
        },
        // Spikes
        .{
            .effect = .Spikes,
            .bp = 0,
            .type = .Ground,
            .accuracy = percent(100),
            .target = .FoeSide,
        },
        // ZapCannon
        .{
            .effect = .ParalyzeChance,
            .bp = 100,
            .type = .Electric,
            .accuracy = percent(50),
            .target = .Other,
            .chance = percent(100),
        },
        // Foresight
        .{
            .effect = .Foresight,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // DestinyBond
        .{
            .effect = .DestinyBond,
            .bp = 0,
            .type = .Ghost,
            .accuracy = percent(100),
            .target = .Self,
            .extra = .{ .metronome = false },
        },
        // PerishSong
        .{
            .effect = .PerishSong,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .All,
        },
        // IcyWind
        .{
            .effect = .SpeedDownChance,
            .bp = 55,
            .type = .Ice,
            .accuracy = percent(95),
            .target = .Foes,
            .chance = percent(100),
        },
        // Detect
        .{
            .effect = .Protect,
            .bp = 0,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Self,
            .priority = 2,
            .extra = .{ .metronome = false },
        },
        // BoneRush
        .{
            .effect = .MultiHit,
            .bp = 25,
            .type = .Ground,
            .accuracy = percent(80),
            .target = .Other,
        },
        // LockOn
        .{
            .effect = .LockOn,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Outrage
        .{
            .effect = .Thrashing,
            .bp = 90,
            .type = .Dragon,
            .accuracy = percent(100),
            .target = .RandomFoe,
            .extra = .{ .continuous = true },
        },
        // Sandstorm
        .{
            .effect = .Sandstorm,
            .bp = 0,
            .type = .Rock,
            .accuracy = percent(100),
            .target = .All,
        },
        // GigaDrain
        .{
            .effect = .DrainHP,
            .bp = 60,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Endure
        .{
            .effect = .Endure,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
            .priority = 2,
            .extra = .{ .metronome = false },
        },
        // Charm
        .{
            .effect = .AttackDown2,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Rollout
        .{
            .effect = .Rollout,
            .bp = 30,
            .type = .Rock,
            .accuracy = percent(90),
            .target = .Other,
            .extra = .{ .continuous = true },
        },
        // FalseSwipe
        .{
            .effect = .FalseSwipe,
            .bp = 40,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Swagger
        .{
            .effect = .Swagger,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(90),
            .target = .Other,
        },
        // MilkDrink
        .{
            .effect = .Heal,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Spark
        .{
            .effect = .ParalyzeChance,
            .bp = 65,
            .type = .Electric,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // FuryCutter
        .{
            .effect = .FuryCutter,
            .bp = 10,
            .type = .Bug,
            .accuracy = percent(95),
            .target = .Other,
        },
        // SteelWing
        .{
            .effect = .DefenseUpChance,
            .bp = 70,
            .type = .Steel,
            .accuracy = percent(90),
            .target = .Other,
            .chance = percent(10),
        },
        // MeanLook
        .{
            .effect = .MeanLook,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Attract
        .{
            .effect = .Attract,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // SleepTalk
        .{
            .effect = .SleepTalk,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
            .extra = .{ .metronome = false },
        },
        // HealBell
        .{
            .effect = .HealBell,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Return
        .{
            .effect = .Return,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Present
        .{
            .effect = .Present,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(90),
            .target = .Other,
        },
        // Frustration
        .{
            .effect = .Frustration,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Safeguard
        .{
            .effect = .Safeguard,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .AllySide,
        },
        // PainSplit
        .{
            .effect = .PainSplit,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // SacredFire
        .{
            .effect = .SacredFire,
            .bp = 100,
            .type = .Fire,
            .accuracy = percent(95),
            .target = .Other,
            .chance = percent(50),
        },
        // Magnitude
        .{
            .effect = .Magnitude,
            .bp = 0,
            .type = .Ground,
            .accuracy = percent(100),
            .target = .AllOthers,
            .extra = .{ .underground = true },
        },
        // DynamicPunch
        .{
            .effect = .ConfusionChance,
            .bp = 100,
            .type = .Fighting,
            .accuracy = percent(50),
            .target = .Other,
            .chance = percent(100),
        },
        // Megahorn
        .{
            .effect = .None,
            .bp = 120,
            .type = .Bug,
            .accuracy = percent(85),
            .target = .Other,
        },
        // DragonBreath
        .{
            .effect = .ParalyzeChance,
            .bp = 60,
            .type = .Dragon,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(30),
        },
        // BatonPass
        .{
            .effect = .BatonPass,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Encore
        .{
            .effect = .Encore,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // Pursuit
        .{
            .effect = .Pursuit,
            .bp = 40,
            .type = .Dark,
            .accuracy = percent(100),
            .target = .Other,
        },
        // RapidSpin
        .{
            .effect = .RapidSpin,
            .bp = 20,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // SweetScent
        .{
            .effect = .EvasionDown1,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Foes,
        },
        // IronTail
        .{
            .effect = .DefenseDownChance,
            .bp = 100,
            .type = .Steel,
            .accuracy = percent(75),
            .target = .Other,
            .chance = percent(30),
        },
        // MetalClaw
        .{
            .effect = .AttackUpChance,
            .bp = 50,
            .type = .Steel,
            .accuracy = percent(95),
            .target = .Other,
            .chance = percent(10),
        },
        // VitalThrow
        .{
            .effect = .AlwaysHit,
            .bp = 70,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Other,
            .priority = -1,
        },
        // MorningSun
        .{
            .effect = .MorningSun,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Synthesis
        .{
            .effect = .Synthesis,
            .bp = 0,
            .type = .Grass,
            .accuracy = percent(100),
            .target = .Self,
        },
        // Moonlight
        .{
            .effect = .Moonlight,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Self,
        },
        // HiddenPower
        .{
            .effect = .HiddenPower,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // CrossChop
        .{
            .effect = .HighCritical,
            .bp = 100,
            .type = .Fighting,
            .accuracy = percent(80),
            .target = .Other,
        },
        // Twister
        .{
            .effect = .Twister,
            .bp = 40,
            .type = .Dragon,
            .accuracy = percent(100),
            .target = .Foes,
            .chance = percent(20),
            .extra = .{ .flying = true },
        },
        // RainDance
        .{
            .effect = .RainDance,
            .bp = 0,
            .type = .Water,
            .accuracy = percent(100),
            .target = .All,
        },
        // SunnyDay
        .{
            .effect = .SunnyDay,
            .bp = 0,
            .type = .Fire,
            .accuracy = percent(100),
            .target = .All,
        },
        // Crunch
        .{
            .effect = .SpDefDownChance,
            .bp = 80,
            .type = .Dark,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(20),
        },
        // MirrorCoat
        .{
            .effect = .MirrorCoat,
            .bp = 0,
            .type = .Psychic,
            .accuracy = percent(100),
            .target = .Depends,
            .priority = -1,
            .extra = .{ .metronome = false },
        },
        // PsychUp
        .{
            .effect = .PsychUp,
            .bp = 0,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
        },
        // ExtremeSpeed
        .{
            .effect = .Priority,
            .bp = 80,
            .type = .Normal,
            .accuracy = percent(100),
            .target = .Other,
            .priority = 1,
        },
        // AncientPower
        .{
            .effect = .AllStatUpChance,
            .bp = 60,
            .type = .Rock,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(10),
        },
        // ShadowBall
        .{
            .effect = .SpDefDownChance,
            .bp = 80,
            .type = .Ghost,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(20),
        },
        // FutureSight
        .{
            .effect = .FutureSight,
            .bp = 80,
            .type = .Psychic,
            .accuracy = percent(90),
            .target = .Other,
        },
        // RockSmash
        .{
            .effect = .DefenseDownChance,
            .bp = 20,
            .type = .Fighting,
            .accuracy = percent(100),
            .target = .Other,
            .chance = percent(50),
        },
        // Whirlpool
        .{
            .effect = .Binding,
            .bp = 15,
            .type = .Water,
            .accuracy = percent(70),
            .target = .Other,
            .extra = .{ .protocol = 5 },
        },
        // BeatUp
        .{
            .effect = .BeatUp,
            .bp = 10,
            .type = .Dark,
            .accuracy = percent(100),
            .target = .Other,
        },
    };

    /// Representation of a move's effect.
    pub const Effect = enum(u8) {
        None,
        AccuracyDown1,
        AccuracyDownChance,
        AllStatUpChance,
        AlwaysHit,
        AttackDown1,
        AttackDown2,
        AttackDownChance,
        AttackUp1,
        AttackUp2,
        AttackUpChance,
        Attract,
        BatonPass,
        BeatUp,
        BellyDrum,
        Bide,
        Binding,
        BurnChance,
        Confusion,
        ConfusionChance,
        Conversion,
        Conversion2,
        Counter,
        Curse,
        DefenseCurl,
        DefenseDown1,
        DefenseDown2,
        DefenseDownChance,
        DefenseUp1,
        DefenseUp2,
        DefenseUpChance,
        DestinyBond,
        Disable,
        DoubleHit,
        DrainHP,
        DreamEater,
        Earthquake,
        Encore,
        Endure,
        EvasionDown1,
        EvasionUp1,
        Explode,
        FalseSwipe,
        FixedDamage,
        FlameWheel,
        FlinchChance,
        FlyDig,
        FocusEnergy,
        ForceSwitch,
        Foresight,
        FreezeChance,
        Frustration,
        FuryCutter,
        FutureSight,
        Gust,
        Haze,
        Heal,
        HealBell,
        HiddenPower,
        HighCritical,
        HyperBeam,
        JumpKick,
        LeechSeed,
        LevelDamage,
        LightScreen,
        LockOn,
        Magnitude,
        MeanLook,
        Metronome,
        Mimic,
        MirrorCoat,
        MirrorMove,
        Mist,
        Moonlight,
        MorningSun,
        MultiHit,
        Nightmare,
        OHKO,
        PainSplit,
        Paralyze,
        ParalyzeChance,
        PayDay,
        PerishSong,
        Poison,
        PoisonChance,
        Present,
        Priority,
        Protect,
        PsychUp,
        Psywave,
        Pursuit,
        Rage,
        RainDance,
        RapidSpin,
        RazorWind,
        Recoil,
        Reflect,
        Return,
        Reversal,
        Rollout,
        SacredFire,
        Safeguard,
        Sandstorm,
        Sketch,
        SkullBash,
        SkyAttack,
        Sleep,
        SleepTalk,
        Snore,
        SolarBeam,
        SpAtkUp1,
        SpDefDownChance,
        SpDefUp2,
        SpeedDown1,
        SpeedDown2,
        SpeedDownChance,
        SpeedUp2,
        Spikes,
        Spite,
        Splash,
        Stomp,
        Substitute,
        SunnyDay,
        SuperFang,
        Swagger,
        Synthesis,
        Teleport,
        Thief,
        Thrashing,
        Thunder,
        Toxic,
        Transform,
        TriAttack,
        TripleKick,
        Twineedle,
        Twister,

        comptime {
            assert(@sizeOf(Effect) == 1);
        }

        /// Whether this effect has a high critical rate.
        pub fn isHighCritical(effect: Effect) bool {
            return effect == .HighCritical or effect == .RazorWind;
        }
    };

    const Target = enum(u8) {
        // none
        All,
        AllySide,
        Field,
        Self,
        // resolve
        AllOthers,
        Depends,
        Other,
        Any,
        Allies,
        Ally,
        AllyOrSelf,
        Foe,
        // resolve + run
        Foes,
        FoeSide,
        RandomFoe,
    };

    const PP = [_]u8{
        35, // Pound
        25, // KarateChop
        10, // DoubleSlap
        15, // CometPunch
        20, // MegaPunch
        20, // PayDay
        15, // FirePunch
        15, // IcePunch
        15, // ThunderPunch
        35, // Scratch
        30, // ViseGrip
        5, // Guillotine
        10, // RazorWind
        30, // SwordsDance
        30, // Cut
        35, // Gust
        35, // WingAttack
        20, // Whirlwind
        15, // Fly
        20, // Bind
        20, // Slam
        10, // VineWhip
        20, // Stomp
        30, // DoubleKick
        5, // MegaKick
        25, // JumpKick
        15, // RollingKick
        15, // SandAttack
        15, // Headbutt
        25, // HornAttack
        20, // FuryAttack
        5, // HornDrill
        35, // Tackle
        15, // BodySlam
        20, // Wrap
        20, // TakeDown
        20, // Thrash
        15, // DoubleEdge
        30, // TailWhip
        35, // PoisonSting
        20, // Twineedle
        20, // PinMissile
        30, // Leer
        25, // Bite
        40, // Growl
        20, // Roar
        15, // Sing
        20, // Supersonic
        20, // SonicBoom
        20, // Disable
        30, // Acid
        25, // Ember
        15, // Flamethrower
        30, // Mist
        25, // WaterGun
        5, // HydroPump
        15, // Surf
        10, // IceBeam
        5, // Blizzard
        20, // Psybeam
        20, // BubbleBeam
        20, // AuroraBeam
        5, // HyperBeam
        35, // Peck
        20, // DrillPeck
        25, // Submission
        20, // LowKick
        20, // Counter
        20, // SeismicToss
        15, // Strength
        20, // Absorb
        10, // MegaDrain
        10, // LeechSeed
        40, // Growth
        25, // RazorLeaf
        10, // SolarBeam
        35, // PoisonPowder
        30, // StunSpore
        15, // SleepPowder
        20, // PetalDance
        40, // StringShot
        10, // DragonRage
        15, // FireSpin
        30, // ThunderShock
        15, // Thunderbolt
        20, // ThunderWave
        10, // Thunder
        15, // RockThrow
        10, // Earthquake
        5, // Fissure
        10, // Dig
        10, // Toxic
        25, // Confusion
        10, // Psychic
        20, // Hypnosis
        40, // Meditate
        30, // Agility
        30, // QuickAttack
        20, // Rage
        20, // Teleport
        15, // NightShade
        10, // Mimic
        40, // Screech
        15, // DoubleTeam
        20, // Recover
        30, // Harden
        20, // Minimize
        20, // Smokescreen
        10, // ConfuseRay
        40, // Withdraw
        40, // DefenseCurl
        30, // Barrier
        30, // LightScreen
        30, // Haze
        20, // Reflect
        30, // FocusEnergy
        10, // Bide
        10, // Metronome
        20, // MirrorMove
        5, // SelfDestruct
        10, // EggBomb
        30, // Lick
        20, // Smog
        20, // Sludge
        20, // BoneClub
        5, // FireBlast
        15, // Waterfall
        10, // Clamp
        20, // Swift
        15, // SkullBash
        15, // SpikeCannon
        35, // Constrict
        20, // Amnesia
        15, // Kinesis
        10, // SoftBoiled
        20, // HighJumpKick
        30, // Glare
        15, // DreamEater
        40, // PoisonGas
        20, // Barrage
        15, // LeechLife
        10, // LovelyKiss
        5, // SkyAttack
        10, // Transform
        30, // Bubble
        10, // DizzyPunch
        15, // Spore
        20, // Flash
        15, // Psywave
        40, // Splash
        40, // AcidArmor
        10, // Crabhammer
        5, // Explosion
        15, // FurySwipes
        10, // Bonemerang
        10, // Rest
        10, // RockSlide
        15, // HyperFang
        30, // Sharpen
        30, // Conversion
        10, // TriAttack
        10, // SuperFang
        20, // Slash
        10, // Substitute
        1, // Struggle
        1, // Sketch
        10, // TripleKick
        10, // Thief
        10, // SpiderWeb
        5, // MindReader
        15, // Nightmare
        25, // FlameWheel
        15, // Snore
        10, // Curse
        15, // Flail
        30, // Conversion2
        5, // Aeroblast
        40, // CottonSpore
        15, // Reversal
        10, // Spite
        25, // PowderSnow
        10, // Protect
        30, // MachPunch
        10, // ScaryFace
        20, // FeintAttack
        10, // SweetKiss
        10, // BellyDrum
        10, // SludgeBomb
        10, // MudSlap
        10, // Octazooka
        20, // Spikes
        5, // ZapCannon
        40, // Foresight
        5, // DestinyBond
        5, // PerishSong
        15, // IcyWind
        5, // Detect
        10, // BoneRush
        5, // LockOn
        15, // Outrage
        10, // Sandstorm
        5, // GigaDrain
        10, // Endure
        20, // Charm
        20, // Rollout
        40, // FalseSwipe
        15, // Swagger
        10, // MilkDrink
        20, // Spark
        20, // FuryCutter
        25, // SteelWing
        5, // MeanLook
        15, // Attract
        10, // SleepTalk
        5, // HealBell
        20, // Return
        15, // Present
        20, // Frustration
        25, // Safeguard
        20, // PainSplit
        5, // SacredFire
        30, // Magnitude
        5, // DynamicPunch
        10, // Megahorn
        20, // DragonBreath
        40, // BatonPass
        5, // Encore
        20, // Pursuit
        40, // RapidSpin
        20, // SweetScent
        15, // IronTail
        35, // MetalClaw
        10, // VitalThrow
        5, // MorningSun
        5, // Synthesis
        5, // Moonlight
        15, // HiddenPower
        5, // CrossChop
        20, // Twister
        5, // RainDance
        5, // SunnyDay
        15, // Crunch
        20, // MirrorCoat
        10, // PsychUp
        5, // ExtremeSpeed
        5, // AncientPower
        15, // ShadowBall
        15, // FutureSight
        15, // RockSmash
        15, // Whirlpool
        10, // BeatUp,
    };

    comptime {
        assert(@sizeOf(Move) == 1);
        assert(@sizeOf(@TypeOf(DATA)) == 2008);
    }

    /// The number of Pokémon moves in this generation.
    pub const size = 251;

    /// Pokémon moves that can be called by Metronome in this generation.
    pub const METRONOME = init: {
        var num = 0;
        var moves: [239]Move = undefined;
        for (1..Move.size + 1) |i| {
            if (Move.get(@enumFromInt(i)).extra.metronome) {
                moves[num] = @enumFromInt(i);
                num += 1;
            }
        }
        assert(num == moves.len);
        break :init moves;
    };

    /// Returns the `Data` corresponding to the move.
    pub fn get(id: Move) Data {
        assert(id != .None);
        return DATA[@intFromEnum(id) - 1];
    }

    /// Returns the base PP of the move.
    pub fn pp(id: Move) u8 {
        assert(id != .None);
        return PP[@intFromEnum(id) - 1];
    }
};
