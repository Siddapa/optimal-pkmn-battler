//! Code generated by `tools/generate` - manual edits will be overwritten.

const gen{{{ gen }}} = @import("../../gen{{{ gen }}}/data.zig");
const std = @import("std");

const assert = std.debug.assert;
const Stats = gen{{{ gen }}}.Stats;
const Types = gen{{{ gen }}}.Types;

/// Representation of a Generation {{{ roman }}} Pokémon species.
pub const Species = enum({{{ Species.type }}}) {
    None,
    {{{ Species.values }}},

    {{{ Species.chances }}}{{{ Species.Data }}}

    const DATA = [_]Data{
        {{{ Species.data }}},
    };

    comptime {
        assert(@sizeOf(Species) == {{{ Species.size }}});
    }

    /// The number of Pokémon species in this generation.
    pub const size = {{{ Species.num }}};{{{ Species.chanceFn }}}

    /// Returns the `Data` corresponding to the species.
    pub fn get(id: Species) Data {
        assert(id != .None);
        return DATA[@intFromEnum(id) - 1];
    }
};
